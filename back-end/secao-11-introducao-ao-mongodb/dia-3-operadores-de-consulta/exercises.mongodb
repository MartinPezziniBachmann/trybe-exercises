use('cinema');

// 1 - Utilize o operador $all para retornar todos os filmes que contenham action e adventure no array category
db.movies.find({ category: { $all: ['action', 'adventure'] } })

// 2 - Retorne todos os filmes que contenham action e sci-fi no array category e nota maior do que 7
db.movies.find({ category: { $all: ['action', 'sci-fi'] }, imdbRating: { $gt: 7 } })

// 3 - Retorne todos os filmes com rating maior do que 103, exibindo apenas title e ratings
db.movies.find({ ratings: { $elemMatch: { $gt: 103 } } }, { _id: 0, title: 1, ratings: 1 })

// 4 - Retorne todos os filmes com ratings entre 100 e 105, exibindo apenas title e ratings
db.movies.find({ ratings: { $elemMatch: { $gte: 100, $lte: 105 } } }, { _id: 0, title: 1, ratings: 1 })

// 5 - Retorne todos os filmes com ratings entre 64 e 105 e divisíveis por 9, exibindo apenas title e ratings
db.movies.find(
  { ratings: { $elemMatch: { $gte: 64, $lte: 105, $mod: [9, 0] } } },
  { _id: 0, title: 1, ratings: 1 }
)

// 6 - Retorne os filmes da categoria adventure com ratings maior do que 103, exibindo apenas title, ratings e category
db.movies.find(
  { category: 'adventure', ratings: { $gt: 103 } },
  { _id: 0, title: 1, ratings: 1, category: 1 }
)

// 7 - Retorne o tĩtulo de todos os filmes com dois elementos em category
db.movies.find({ category: { $size: 2 } }, { _id: 0, title: 1 })

// 8 - Retorne o título de todos os filmes com quatro elementos em ratings
db.movies.find({ ratings: { $size: 4 } }, { _id: 0, title: 1 })

// 9 - Busque os filmes em que o módulo 5 do campo budget seja 0 e que o array category tenha tamanho dois
db.movies.find({ budget: { $mod: [5, 0] }, category: { $size: 2 } })

// 10 - Retorne os filmes da categoria sci-fi ou que possua o rating maior que 199, exibindo apenas title
db.movies.find({ $or: [{ category: 'sci-fi' }, { ratings: { $gt: 199 } }] }, { _id: 0, title: 1 })

// 11 - Retorne os filmes em que o raing possua tamanho 4 e que seja da category family ou adventure, mas que não tenha o rating menor que 7
db.movies.find({ $and: [
  { ratings: { $size: 4 } },
  { category: { $in: ['family', 'adventure'] } },
  { imdbRating: { $not: { $lt: 7 } } } 
]})

// 12 - Utilize o regex para retornar todos os filmes em que a descrição comece com a palavra "The"
db.movies.find({ description: { $regex: /^The/ } })

// 13 - Utilize o regex para retornar todos os filmes em que a descrição termine com a palavra "humanity."
db.movies.find({ description: { $regex: /humanity\.$/ } })
